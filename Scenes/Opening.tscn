[gd_scene load_steps=9 format=2]

[ext_resource path="res://blacground.png" type="Texture" id=1]
[ext_resource path="res://Fonts/trench100free.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://icon.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D

onready var animation = get_node(\"Camera2D/AnimationPlayer\")
export var go = false
func _ready():
	animation.play(\"Opening\")
	set_process(true)
	pass

func _process(delta):
	if go:
		get_tree().change_scene(\"res://Scenes/0.tscn\")
	
	pass"

[sub_resource type="DynamicFont" id=2]

size = 100
use_mipmaps = false
use_filter = false
font_data = ExtResource( 2 )
_sections_unfolded = [ "Font", "Settings" ]

[sub_resource type="Shader" id=3]

code = "shader_type canvas_item;

uniform float screen_width = 1024;
uniform float screen_height = 600;

// Curvature
uniform float BarrelPower =2.1;
// Color bleeding
uniform float color_bleeding = 0.64;
uniform float bleeding_range_x = 1.5;
uniform float bleeding_range_y = 1;
// Scanline
uniform float lines_distance = 4.0;
uniform float scan_size = 4.0;
uniform float scanline_alpha = 0.4;
uniform float lines_velocity = 20.0;
vec2 distort(vec2 p) 
{

	float angle = p.y / p.x;
	float theta = atan(p.y,p.x);
	float radius = pow(length(p), BarrelPower);
	
	p.x = radius * cos(theta);
	p.y = radius * sin(theta);
	
	return 0.5 * (p + vec2(1.0,1.0));
}

void get_color_bleeding(inout vec4 current_color,inout vec4 color_left){

	current_color = current_color*vec4(color_bleeding,0.5,0.25,1);
	color_left = color_left*vec4(0.0,0.8,color_bleeding,1);
}

void get_color_scanline(vec2 uv,inout vec4 c,float TIME){
	float line_row = floor((uv.y * screen_height/scan_size) + mod(TIME*lines_velocity, lines_distance));

	float n = 1.0 - ceil((mod(line_row,lines_distance)/lines_distance));

	c = c - n*c*(1.0 - scanline_alpha);
	c.a = 1.0;

}

void fragment()
{
	
vec2 xy = SCREEN_UV * 2.0;
xy.x -= 1.0;
xy.y -= 1.0;

float d = length(xy);
if(d < 1.5){
	xy = distort(xy);
}
else{
	xy = SCREEN_UV;
}

float pixel_size_x = 1.0/screen_width*bleeding_range_x;
float pixel_size_y = 1.0/screen_height*bleeding_range_y;
vec4 color_left = texture(SCREEN_TEXTURE,SCREEN_UV - vec2(pixel_size_x, pixel_size_y));
vec4 current_color = texture(SCREEN_TEXTURE,SCREEN_UV);
get_color_bleeding(current_color,color_left);
vec4 c = current_color+color_left;
get_color_scanline(xy,c,TIME);
COLOR = c;

}"

[sub_resource type="ShaderMaterial" id=4]

render_priority = 0
shader = SubResource( 3 )
shader_param/screen_width = null
shader_param/screen_height = null
shader_param/BarrelPower = null
shader_param/color_bleeding = null
shader_param/bleeding_range_x = null
shader_param/bleeding_range_y = null
shader_param/lines_distance = null
shader_param/scan_size = null
shader_param/scanline_alpha = null
shader_param/lines_velocity = null

[sub_resource type="Animation" id=5]

length = 8.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Label:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ "", "2", "20", "205", "2058", "2058 M", "2058 ME", "2058 MEM", "2058 MEMO", "2058 MEMOR", "2058 MEMORY ", "2058 MEMORY R", "2058 MEMORY RE", "2058 MEMORY REC", "2058 MEMORY RECO", "2058 MEMORY RECOV", "2058 MEMORY RECOVE", "2058 MEMORY RECOVER", "2058 MEMORY RECOVERY" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Label2:text")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 3.8, 4, 4.2, 4.4, 4.6, 4.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ "", "C", "CE", "CEN", "CENT", "CENTE", "CENTER" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Label3:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 4.8, 6.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("..")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": ""
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("..:go")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 6.9, 7.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, false, true ]
}

[node name="Node2D" type="Node2D"]

script = SubResource( 1 )
_sections_unfolded = [ "Transform" ]
go = true

[node name="Camera2D" type="Camera2D" parent="." index="0"]

anchor_mode = 1
rotating = false
current = true
zoom = Vector2( 1, 1 )
limit_left = -10000000
limit_top = -10000000
limit_right = 10000000
limit_bottom = 10000000
limit_smoothed = false
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = false
smoothing_speed = 5.0
offset_v = 0.0
offset_h = 0.0
drag_margin_left = 0.2
drag_margin_top = 0.2
drag_margin_right = 0.2
drag_margin_bottom = 0.2
editor_draw_screen = true
editor_draw_limits = false
editor_draw_drag_margin = false

[node name="blacground" type="Sprite" parent="Camera2D" index="0"]

position = Vector2( -5.19775, -24.7959 )
scale = Vector2( 2.60715, 2.9688 )
texture = ExtResource( 1 )

[node name="Label2" type="Label" parent="Camera2D" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -582.0
margin_top = 28.0
margin_right = 569.0
margin_bottom = 128.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
custom_fonts/font = SubResource( 2 )
text = "CENTER"
align = 1
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1
_sections_unfolded = [ "custom_fonts" ]

[node name="Label" type="Label" parent="Camera2D" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -607.0
margin_top = -100.0
margin_right = 544.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
custom_fonts/font = SubResource( 2 )
text = "2058 MEMORY RECOVERY"
align = 1
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1
_sections_unfolded = [ "Grow Direction", "Rect", "custom_fonts" ]

[node name="Label3" type="Label" parent="Camera2D" index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -582.0
margin_top = 220.0
margin_right = 602.0
margin_bottom = 320.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
custom_fonts/font = SubResource( 2 )
text = "inside patienet subconscious"
align = 1
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1
_sections_unfolded = [ "Grow Direction", "Rect", "Visibility", "custom_fonts" ]

[node name="Sprite" type="Sprite" parent="Camera2D" index="4"]

[node name="TextureRect" type="TextureRect" parent="Camera2D" index="5"]

material = SubResource( 4 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -1036.0
margin_top = -672.0
margin_right = 1121.0
margin_bottom = 639.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 3 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Material" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="Camera2D" index="6"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/Opening = SubResource( 5 )
blend_times = [  ]
_sections_unfolded = [ "Playback Options" ]


